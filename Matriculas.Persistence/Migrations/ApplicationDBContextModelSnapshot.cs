// <auto-generated />
using System;
using Matriculas.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Matriculas.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Matriculas.Domain.Entities.Alumno", b =>
                {
                    b.Property<long>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nIdAlumno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdAlumno"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sNombre");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlumno");

                    b.ToTable("tb_Alumnos");

                    b.HasData(
                        new
                        {
                            IdAlumno = 1L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(6446),
                            IsActive = true,
                            Nombre = "Alumno 1"
                        },
                        new
                        {
                            IdAlumno = 2L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(6475),
                            IsActive = true,
                            Nombre = "Alumno 2"
                        },
                        new
                        {
                            IdAlumno = 3L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(6476),
                            IsActive = true,
                            Nombre = "Alumno 3"
                        },
                        new
                        {
                            IdAlumno = 4L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(6478),
                            IsActive = true,
                            Nombre = "Alumno 4"
                        },
                        new
                        {
                            IdAlumno = 5L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(6481),
                            IsActive = true,
                            Nombre = "Alumno 5"
                        });
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Aula", b =>
                {
                    b.Property<long>("IdAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nIdAula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdAula"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("nCapacidad");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAula");

                    b.ToTable("tb_Aulas");

                    b.HasData(
                        new
                        {
                            IdAula = 1L,
                            Capacidad = 2,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(8392),
                            IsActive = true
                        },
                        new
                        {
                            IdAula = 2L,
                            Capacidad = 2,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(8396),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Curso", b =>
                {
                    b.Property<long>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nIdCurso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdCurso"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDesCurso");

                    b.Property<long>("IdSeccion")
                        .HasColumnType("bigint")
                        .HasColumnName("nIdSeccion");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCurso");

                    b.HasIndex("IdSeccion");

                    b.ToTable("tb_Cursos");

                    b.HasData(
                        new
                        {
                            IdCurso = 1L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9682),
                            DesCurso = "Curso de prueba 1",
                            IdSeccion = 1L,
                            IsActive = true
                        },
                        new
                        {
                            IdCurso = 2L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9687),
                            DesCurso = "Curso de prueba 2",
                            IdSeccion = 1L,
                            IsActive = true
                        },
                        new
                        {
                            IdCurso = 3L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9688),
                            DesCurso = "Curso de prueba 3",
                            IdSeccion = 2L,
                            IsActive = true
                        },
                        new
                        {
                            IdCurso = 4L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9690),
                            DesCurso = "Curso de prueba 4",
                            IdSeccion = 2L,
                            IsActive = true
                        },
                        new
                        {
                            IdCurso = 5L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9691),
                            DesCurso = "Curso de prueba 5",
                            IdSeccion = 3L,
                            IsActive = true
                        },
                        new
                        {
                            IdCurso = 6L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 881, DateTimeKind.Local).AddTicks(9692),
                            DesCurso = "Curso de prueba 6",
                            IdSeccion = 3L,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Matricula", b =>
                {
                    b.Property<long>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nIdRegistro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRegistro"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdAlumno")
                        .HasColumnType("bigint")
                        .HasColumnName("nIdAlumno");

                    b.Property<long>("IdCurso")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSeccion")
                        .HasColumnType("bigint")
                        .HasColumnName("nIdSeccion");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdSeccion");

                    b.ToTable("tb_Matricula");
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Seccion", b =>
                {
                    b.Property<long>("IdSeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("nIdSeccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdSeccion"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time")
                        .HasColumnName("tHoraFin");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("tHoraInicio");

                    b.Property<long>("IdAula")
                        .HasColumnType("bigint")
                        .HasColumnName("nIdAula");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sTurno");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSeccion");

                    b.HasIndex("IdAula");

                    b.ToTable("tb_Secciones");

                    b.HasData(
                        new
                        {
                            IdSeccion = 1L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 882, DateTimeKind.Local).AddTicks(1078),
                            HoraFin = new TimeOnly(10, 0, 0),
                            HoraInicio = new TimeOnly(8, 0, 0),
                            IdAula = 1L,
                            IsActive = true,
                            Turno = "Mañana"
                        },
                        new
                        {
                            IdSeccion = 2L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 882, DateTimeKind.Local).AddTicks(1085),
                            HoraFin = new TimeOnly(16, 0, 0),
                            HoraInicio = new TimeOnly(14, 0, 0),
                            IdAula = 1L,
                            IsActive = true,
                            Turno = "Tarde"
                        },
                        new
                        {
                            IdSeccion = 3L,
                            CreateDate = new DateTime(2024, 10, 30, 6, 6, 2, 882, DateTimeKind.Local).AddTicks(1087),
                            HoraFin = new TimeOnly(22, 0, 0),
                            HoraInicio = new TimeOnly(20, 0, 0),
                            IdAula = 2L,
                            IsActive = true,
                            Turno = "Noche"
                        });
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Curso", b =>
                {
                    b.HasOne("Matriculas.Domain.Entities.Seccion", "Seccion")
                        .WithMany("Cursos")
                        .HasForeignKey("IdSeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Matricula", b =>
                {
                    b.HasOne("Matriculas.Domain.Entities.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matriculas.Domain.Entities.Seccion", "Seccion")
                        .WithMany()
                        .HasForeignKey("IdSeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Seccion", b =>
                {
                    b.HasOne("Matriculas.Domain.Entities.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("IdAula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Matriculas.Domain.Entities.Seccion", b =>
                {
                    b.Navigation("Cursos");
                });
#pragma warning restore 612, 618
        }
    }
}
